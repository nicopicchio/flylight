{"ast":null,"code":"var _jsxFileName = \"/Users/kimberlydijkmans/Documents/Careers/Hackathons/Amadeus_1AHACK4SUSTAINABILITY/flylight/src/components/GoalChart/GoalChart.jsx\";\nimport React from 'react';\nimport './GoalChart.css';\n\n// export default function GoalChart() {\n//   return (\n// <div className=\"goal-chart goal-chart--container\">\n//     <div className=\"goal-chart goal-chart--progress-bar\"></div>\n//     {/* <div className=\"goal-chart goal-chart--offset-bar\"></div> */}\n// </div>\n//   )\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cleanPercentage = percentage => {\n  const isNegativeOrNaN = !Number.isFinite(+percentage) || percentage < 0; // we can set non-numbers to 0 here\n  const isTooHigh = percentage > 100;\n  return isNegativeOrNaN ? 0 : isTooHigh ? 100 : +percentage;\n};\nconst Circle = _ref => {\n  let {\n    colour,\n    percentage\n  } = _ref;\n  const r = 20;\n  const circ = 2 * Math.PI * r;\n  const strokePct = (100 - percentage) * circ / 100; // where stroke will start, e.g. from 15% to 100%.\n  return /*#__PURE__*/_jsxDEV(\"circle\", {\n    r: r,\n    cx: 160,\n    cy: 30,\n    fill: \"transparent\",\n    stroke: strokePct !== circ ? colour : \"\" // remove colour as 0% sets full circumference\n    ,\n    strokeWidth: \".8rem\",\n    strokeDasharray: circ,\n    strokeDashoffset: percentage ? strokePct : 0\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n// Can remove later, do not need text in circle\n_c = Circle;\nconst Text = _ref2 => {\n  let {\n    percentage\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"text\", {\n    x: \"50%\",\n    y: \"50%\",\n    dominantBaseline: \"central\",\n    textAnchor: \"middle\",\n    fontSize: \".5em\",\n    children: [percentage.toFixed(0), \"%\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Text;\nconst Pie = _ref3 => {\n  let {\n    percentage\n  } = _ref3;\n  const pct = cleanPercentage(percentage);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: 100,\n    height: 100,\n    children: [/*#__PURE__*/_jsxDEV(\"g\", {\n      transform: `rotate(-90 ${\"100 100\"})`,\n      children: [/*#__PURE__*/_jsxDEV(Circle, {\n        colour: \"#D9D9D9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Circle, {\n        colour: \"#00BBB0\",\n        percentage: pct\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      percentage: pct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Pie;\nexport default Pie;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Circle\");\n$RefreshReg$(_c2, \"Text\");\n$RefreshReg$(_c3, \"Pie\");","map":{"version":3,"names":["React","cleanPercentage","percentage","isNegativeOrNaN","Number","isFinite","isTooHigh","Circle","colour","r","circ","Math","PI","strokePct","Text","toFixed","Pie","pct"],"sources":["/Users/kimberlydijkmans/Documents/Careers/Hackathons/Amadeus_1AHACK4SUSTAINABILITY/flylight/src/components/GoalChart/GoalChart.jsx"],"sourcesContent":["import React from 'react';\nimport './GoalChart.css';\n\n// export default function GoalChart() {\n//   return (\n// <div className=\"goal-chart goal-chart--container\">\n//     <div className=\"goal-chart goal-chart--progress-bar\"></div>\n//     {/* <div className=\"goal-chart goal-chart--offset-bar\"></div> */}\n// </div>\n//   )\n// }\n\nconst cleanPercentage = (percentage) => {\n  const isNegativeOrNaN = !Number.isFinite(+percentage) || percentage < 0; // we can set non-numbers to 0 here\n  const isTooHigh = percentage > 100;\n  return isNegativeOrNaN ? 0 : isTooHigh ? 100 : +percentage;\n};\n\nconst Circle = ({ colour, percentage }) => {\n  const r = 20;\n  const circ = 2 * Math.PI * r;\n  const strokePct = ((100 - percentage) * circ) / 100; // where stroke will start, e.g. from 15% to 100%.\n  return (\n    <circle\n      r={r}\n      cx={160}\n      cy={30}\n      fill=\"transparent\"\n      stroke={strokePct !== circ ? colour : \"\"} // remove colour as 0% sets full circumference\n      strokeWidth={\".8rem\"}\n      strokeDasharray={circ}\n      strokeDashoffset={percentage ? strokePct : 0}\n    ></circle>\n  );\n};\n\n// Can remove later, do not need text in circle\nconst Text = ({ percentage }) => {\n  return (\n    <text\n      x=\"50%\"\n      y=\"50%\"\n      dominantBaseline=\"central\"\n      textAnchor=\"middle\"\n      fontSize={\".5em\"}\n    >\n      {percentage.toFixed(0)}%\n    </text>\n  );\n};\n\nconst Pie = ({ percentage }) => {\n  const pct = cleanPercentage(percentage);\n  return (\n    <svg width={100} height={100}>\n      <g transform={`rotate(-90 ${\"100 100\"})`}>\n        <Circle colour=\"#D9D9D9\" />\n        <Circle colour='#00BBB0' percentage={pct} />\n      </g>\n      <Text percentage={pct} />\n    </svg>\n  );\n};\n\nexport default Pie;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA,MAAMC,eAAe,GAAIC,UAAU,IAAK;EACtC,MAAMC,eAAe,GAAG,CAACC,MAAM,CAACC,QAAQ,CAAC,CAACH,UAAU,CAAC,IAAIA,UAAU,GAAG,CAAC,CAAC,CAAC;EACzE,MAAMI,SAAS,GAAGJ,UAAU,GAAG,GAAG;EAClC,OAAOC,eAAe,GAAG,CAAC,GAAGG,SAAS,GAAG,GAAG,GAAG,CAACJ,UAAU;AAC5D,CAAC;AAED,MAAMK,MAAM,GAAG,QAA4B;EAAA,IAA3B;IAAEC,MAAM;IAAEN;EAAW,CAAC;EACpC,MAAMO,CAAC,GAAG,EAAE;EACZ,MAAMC,IAAI,GAAG,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAGH,CAAC;EAC5B,MAAMI,SAAS,GAAI,CAAC,GAAG,GAAGX,UAAU,IAAIQ,IAAI,GAAI,GAAG,CAAC,CAAC;EACrD,oBACE;IACE,CAAC,EAAED,CAAE;IACL,EAAE,EAAE,GAAI;IACR,EAAE,EAAE,EAAG;IACP,IAAI,EAAC,aAAa;IAClB,MAAM,EAAEI,SAAS,KAAKH,IAAI,GAAGF,MAAM,GAAG,EAAG,CAAC;IAAA;IAC1C,WAAW,EAAE,OAAQ;IACrB,eAAe,EAAEE,IAAK;IACtB,gBAAgB,EAAER,UAAU,GAAGW,SAAS,GAAG;EAAE;IAAA;IAAA;IAAA;EAAA,QACrC;AAEd,CAAC;;AAED;AAAA,KAlBMN,MAAM;AAmBZ,MAAMO,IAAI,GAAG,SAAoB;EAAA,IAAnB;IAAEZ;EAAW,CAAC;EAC1B,oBACE;IACE,CAAC,EAAC,KAAK;IACP,CAAC,EAAC,KAAK;IACP,gBAAgB,EAAC,SAAS;IAC1B,UAAU,EAAC,QAAQ;IACnB,QAAQ,EAAE,MAAO;IAAA,WAEhBA,UAAU,CAACa,OAAO,CAAC,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACjB;AAEX,CAAC;AAAC,MAZID,IAAI;AAcV,MAAME,GAAG,GAAG,SAAoB;EAAA,IAAnB;IAAEd;EAAW,CAAC;EACzB,MAAMe,GAAG,GAAGhB,eAAe,CAACC,UAAU,CAAC;EACvC,oBACE;IAAK,KAAK,EAAE,GAAI;IAAC,MAAM,EAAE,GAAI;IAAA,wBAC3B;MAAG,SAAS,EAAG,cAAa,SAAU,GAAG;MAAA,wBACvC,QAAC,MAAM;QAAC,MAAM,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,eAC3B,QAAC,MAAM;QAAC,MAAM,EAAC,SAAS;QAAC,UAAU,EAAEe;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1C,eACJ,QAAC,IAAI;MAAC,UAAU,EAAEA;IAAI;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACrB;AAEV,CAAC;AAAC,MAXID,GAAG;AAaT,eAAeA,GAAG;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}